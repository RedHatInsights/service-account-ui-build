{"version":3,"file":"223.a941b60f.js","mappings":"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","sources":["webpack://sas-ui/./src/app/auth/Auth.ts","webpack://sas-ui/./src/app/common/MASAlerts/MASAlerts.tsx","webpack://sas-ui/./src/app/common/MASAlerts/MASAlertToastGroup.tsx","webpack://sas-ui/./src/app/common/DeleteModal/DeleteModal.tsx","webpack://sas-ui/./src/app/common/MASEmptyState/MASEmptyState.tsx","webpack://sas-ui/./src/app/common/MASErrorBoundary/MASErrorBoundary.tsx","webpack://sas-ui/./src/app/common/MASPagination/MASPagination.tsx","webpack://sas-ui/./src/app/common/MASTable/CustomRowWrapper.tsx","webpack://sas-ui/./src/app/common/MASTable/MASTable.tsx","webpack://sas-ui/./src/app/common/MASToolbar/MASToolbar.tsx","webpack://sas-ui/./src/app/utils/useDocumentTitle.ts","webpack://sas-ui/./src/app/common/MASPageNotFound/MASPageNotFound.tsx","webpack://sas-ui/./src/app/modules/ServiceAccounts/ServiceAccounts.tsx","webpack://sas-ui/./src/app/modules/ServiceAccounts/ServiceAccountsFederated.tsx","webpack://sas-ui/./src/app/routes.tsx","webpack://sas-ui/./src/app/modules/ServiceAccounts/ServiceAccountsConnected.tsx","webpack://sas-ui/./src/app/bgimages/Patternfly-Logo.svg","webpack://sas-ui/./src/app/auth/keycloak/keycloakAuth.ts","webpack://sas-ui/./src/app/auth/keycloak/KeycloakContext.tsx","webpack://sas-ui/./src/app/AppLayout/AppLayout.tsx","webpack://sas-ui/./src/app/index.tsx","webpack://sas-ui/./src/bootstrap.tsx"],"sourcesContent":["import React, { useContext } from \"react\";\n\n/**\n * The Auth object provides information about the authenticated user\n */\nexport type Auth = {\n  /**\n   * Get the username of the authenticated user\n   */\n  getUsername: () => Promise<string> | undefined;\n  /**\n   * Get the is_org_admin of the authenticated user\n   */\n  isOrgAdmin: () => Promise<boolean> | undefined;\n\n  sas_ui: {\n    /**\n     * Get the token for accessing Service Accounts UI\n     */\n    getToken: () => Promise<string> | undefined;\n  };\n};\n\n/**\n * The AuthContext allows access to the Auth context\n */\nexport const AuthContext: React.Context<Auth | undefined> = React.createContext<\n  Auth | undefined\n>(undefined);\n\n/**\n * useAuth is a custom hook that is a shorthand for useContext(AuthContext)\n */\nexport const useAuth = (): Auth => {\n  const answer = useContext(AuthContext);\n  if (answer === undefined) {\n    throw new Error(\"must be used inside an AuthContext provider\");\n  }\n  return answer;\n};\n","import { FunctionComponent, useEffect, useState } from \"react\";\nimport { MASAlertToastGroup } from \"@app/common\";\nimport { AlertContext, AlertProps } from \"@rhoas/app-services-ui-shared\";\n\ntype TimeOut = {\n  key: string | undefined;\n  timeOut: ReturnType<typeof setTimeout> | undefined;\n};\n\nexport const AlertProvider: FunctionComponent = ({ children }) => {\n  const [alerts, setAlerts] = useState<AlertProps[]>([]);\n  const [timers, setTimers] = useState<TimeOut[]>([]);\n\n  useEffect(() => {\n    const timersKeys = timers.map((timer) => timer.key);\n    const timeOuts = alerts\n      .filter((alert) => !timersKeys.includes(alert?.id))\n      .map((alert) => {\n        const { id = \"\" } = alert;\n        const timeOut: ReturnType<typeof setTimeout> = setTimeout(\n          () => hideAlert(id),\n          8000\n        );\n        return { key: alert.id, timeOut } as TimeOut;\n      });\n    setTimers([...timers, ...timeOuts]);\n    return () =>\n      timers.forEach((timer) => timer?.timeOut && clearTimeout(timer.timeOut));\n  }, [alerts, timers]);\n\n  const createId = () => new Date().getTime();\n\n  const hideAlert = (key: string | undefined) => {\n    setAlerts((alerts) => [...alerts.filter((el) => el.id !== key)]);\n    setTimers((timers) => [...timers.filter((timer) => timer.key === key)]);\n  };\n\n  const addAlert = (props: AlertProps) => {\n    const id = createId().toString();\n    setAlerts([...alerts, { ...props, id }]);\n  };\n\n  return (\n    <AlertContext.Provider value={{ addAlert }}>\n      <MASAlertToastGroup alerts={alerts} onCloseAlert={hideAlert} />\n      {children}\n    </AlertContext.Provider>\n  );\n};\n","import { FunctionComponent } from \"react\";\nimport { AlertProps } from \"@rhoas/app-services-ui-shared\";\nimport {\n  AlertGroup,\n  Alert,\n  AlertActionCloseButton,\n  AlertVariant,\n} from \"@patternfly/react-core\";\n\ntype AlertToastGroupProps = {\n  alerts: AlertProps[];\n  onCloseAlert: (key: string | undefined) => void;\n};\n\nexport const MASAlertToastGroup: FunctionComponent<AlertToastGroupProps> = ({\n  alerts,\n  onCloseAlert,\n}: AlertToastGroupProps) => {\n  return (\n    <AlertGroup isToast>\n      {alerts.map(\n        ({ id, variant, title, description, dataTestId, ...rest }) => (\n          <Alert\n            key={id}\n            isLiveRegion\n            variant={AlertVariant[variant]}\n            variantLabel=\"\"\n            title={title}\n            actionClose={\n              <AlertActionCloseButton\n                title={title}\n                onClose={() => onCloseAlert(id)}\n              />\n            }\n            data-testid={dataTestId}\n            {...rest}\n          >\n            {description}\n          </Alert>\n        )\n      )}\n    </AlertGroup>\n  );\n};\n","import {\n  ReactNode,\n  FunctionComponent,\n  ReactElement,\n  KeyboardEvent,\n} from \"react\";\nimport {\n  Button,\n  ButtonProps,\n  ButtonVariant,\n  Modal,\n  ModalProps,\n  ModalVariant,\n  Text,\n  TextInput,\n  TextInputProps,\n  TextProps,\n} from \"@patternfly/react-core\";\nimport { getModalAppendTo } from \"@app/utils/utils\";\nimport \"./DeleteModal.css\";\n\nexport type ConfirmButtonProps<T> = Omit<\n  ButtonProps,\n  \"children\" | \"onClick\"\n> & {\n  id?: string;\n  key?: string;\n  label?: string;\n  onClick?: (data?: T) => Promise<void> | void;\n  \"data-testid\"?: string;\n};\n\nexport type NestedModalProps = Omit<ModalProps, \"children\" | \"ref\">;\n\nexport type CancelButtonProps = Omit<ButtonProps, \"children\"> & {\n  id?: string;\n  key?: string;\n  label?: string;\n};\n\nexport type NestedTextProps = Omit<TextProps, \"children\"> & {\n  description?: string;\n};\n\nexport type NestedTextInputProps = Omit<TextInputProps, \"onKeyPress\"> & {\n  showTextInput: boolean;\n  label: string;\n  value: string | undefined;\n  onKeyPress: (e: KeyboardEvent) => void;\n};\n\nexport type DeleteModalProps<T> = {\n  isModalOpen: boolean;\n  title?: string;\n  modalProps?: NestedModalProps;\n  handleModalToggle: () => void;\n  children?: ReactNode;\n  selectedItemData?: T;\n  confirmButtonProps?: ConfirmButtonProps<T>;\n  cancelButtonProps?: CancelButtonProps;\n  textProps?: NestedTextProps;\n  textInputProps?: NestedTextInputProps;\n};\n\nexport const DeleteModal = <T,>({\n  isModalOpen,\n  title,\n  modalProps,\n  confirmButtonProps,\n  cancelButtonProps,\n  handleModalToggle,\n  textProps,\n  children,\n  selectedItemData,\n  textInputProps,\n}: DeleteModalProps<T>): ReactElement => {\n  const {\n    variant = ModalVariant.small,\n    titleIconVariant = \"warning\",\n    [\"aria-label\"]: ariaLabel,\n    showClose = true,\n    ...restModalProps\n  } = modalProps || {};\n\n  const {\n    id = \"confirm__button\",\n    key = \"confirm-button\",\n    variant: buttonConfirmVariant = ButtonVariant.danger,\n    onClick: onClickConfirmButton,\n    isDisabled: isDisabledConfirmButton,\n    label: confirmActionLabel = \"Delete\",\n    isLoading,\n    ...restConfirmButtonProps\n  } = confirmButtonProps || {};\n\n  const {\n    id: cancelButtonId = \"cancel__button\",\n    key: cancelButtonKey = '\"cancel-button',\n    variant: cancelButtonVariant = ButtonVariant.link,\n    label: cancelActionLabel = \"Cancel\",\n    ...restCancelButtonProps\n  } = cancelButtonProps || {};\n\n  const {\n    className = \"delete-item__modal--text\",\n    description,\n    ...restTextProps\n  } = textProps || {};\n  const {\n    label = \"\",\n    value,\n    onChange,\n    onKeyPress,\n    showTextInput,\n    ...restInputFieldProps\n  } = textInputProps || {};\n\n  const ConfirmDelete: FunctionComponent = () => {\n    if (showTextInput) {\n      return (\n        <>\n          <label\n            htmlFor=\"mas-name-input\"\n            dangerouslySetInnerHTML={{ __html: label }}\n          />\n          <TextInput\n            id=\"name__input\"\n            name=\"mas-name-input\"\n            type=\"text\"\n            value={value}\n            onChange={onChange}\n            onKeyPress={onKeyPress}\n            autoFocus={true}\n            {...restInputFieldProps}\n          />\n        </>\n      );\n    } else {\n      return <></>;\n    }\n  };\n\n  return (\n    <Modal\n      variant={variant}\n      isOpen={isModalOpen}\n      aria-label={ariaLabel}\n      title={title}\n      titleIconVariant={titleIconVariant}\n      showClose={showClose}\n      onClose={handleModalToggle}\n      appendTo={getModalAppendTo}\n      actions={[\n        <Button\n          id={id}\n          key={key}\n          variant={buttonConfirmVariant}\n          onClick={() =>\n            onClickConfirmButton && onClickConfirmButton(selectedItemData)\n          }\n          isDisabled={isDisabledConfirmButton}\n          isLoading={isLoading}\n          {...restConfirmButtonProps}\n        >\n          {confirmActionLabel}\n        </Button>,\n        <Button\n          id={cancelButtonId}\n          key={cancelButtonKey}\n          variant={cancelButtonVariant}\n          onClick={handleModalToggle}\n          {...restCancelButtonProps}\n        >\n          {cancelActionLabel}\n        </Button>,\n      ]}\n      {...restModalProps}\n    >\n      <Text\n        className={className}\n        dangerouslySetInnerHTML={{ __html: description || \"\" }}\n        {...restTextProps}\n      />\n      <ConfirmDelete />\n      {children}\n    </Modal>\n  );\n};\n","import * as React from \"react\";\nimport {\n  Title,\n  Button,\n  EmptyState as PFEmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  TitleSizes,\n  TitleProps,\n  ButtonProps,\n  EmptyStateIconProps,\n  EmptyStateProps as PFEmptyStateProps,\n  EmptyStateBodyProps,\n  ButtonVariant,\n  EmptyStateVariant,\n} from \"@patternfly/react-core\";\nimport PlusCircleIcon from \"@patternfly/react-icons/dist/js/icons/plus-circle-icon\";\nimport SpaceShuttleIcon from \"@patternfly/react-icons/dist/js/icons/space-shuttle-icon\";\nimport LockIcon from \"@patternfly/react-icons/dist/js/icons/lock-icon\";\nimport SearchIcon from \"@patternfly/react-icons/dist/js/icons/search-icon\";\nimport ExclamationCircleIcon from \"@patternfly/react-icons/dist/js/icons/exclamation-circle-icon\";\nimport NotFoundIcon from \"@app/bgimages/Not-Found.svg\";\nimport { css } from \"@patternfly/react-styles\";\nimport \"./MASEmptyState.css\";\n\nexport enum MASEmptyStateVariant {\n  GettingStarted = \"GettingStarted\",\n  NoAccess = \"NoAccess\",\n  NoResult = \"NoResult\",\n  NoItems = \"NoItems\",\n  UnexpectedError = \"UnexpectedError\",\n  PageNotFound = \"PageNotFound\",\n}\n\nexport type MASEmptyStateProps = {\n  titleProps?: Omit<TitleProps, \"children\" | \"headingLevel\"> & {\n    headingLevel?: TitleProps[\"headingLevel\"];\n  };\n  emptyStateProps?: Omit<PFEmptyStateProps, \"children\" | \"variant\"> & {\n    variant?: MASEmptyStateVariant | EmptyStateVariant;\n  };\n  emptyStateIconProps?: EmptyStateIconProps;\n  emptyStateBodyProps?: Omit<EmptyStateBodyProps, \"children\"> & {\n    body?: string | React.ReactNode;\n  };\n  buttonProps?: Omit<ButtonProps, \"children\"> & {\n    title?: string;\n    onClick?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n    \"data-testid\"?: string;\n  };\n  children?: React.ReactNode;\n};\n\nexport const MASEmptyState: React.FC<MASEmptyStateProps> = ({\n  titleProps,\n  buttonProps,\n  emptyStateIconProps,\n  emptyStateProps,\n  emptyStateBodyProps,\n  children,\n}: MASEmptyStateProps) => {\n  const {\n    variant: buttonVariant = ButtonVariant.primary,\n    onClick,\n    ...restButtonProps\n  } = buttonProps || {};\n  const { title, ...restTitleProps } = titleProps || {};\n  const { body, ...restEmptyStateBodyProps } = emptyStateBodyProps || {};\n  const {\n    variant: masEmptyStateVariant = MASEmptyStateVariant.GettingStarted,\n    className,\n    ...restEmptyStateProps\n  } = emptyStateProps || {};\n\n  const NotFoundImg = () => (\n    <img src={NotFoundIcon} alt=\"Not found page\" width=\"128px\" />\n  );\n\n  const getVariantConfig = () => {\n    let variantConfig;\n    switch (masEmptyStateVariant) {\n      case MASEmptyStateVariant.GettingStarted:\n        variantConfig = {\n          variant: EmptyStateVariant.xl,\n          icon: SpaceShuttleIcon,\n          titleSize: TitleSizes[\"4xl\"],\n          headingLevel: \"h1\" as TitleProps[\"headingLevel\"],\n        };\n        break;\n      case MASEmptyStateVariant.NoAccess:\n        variantConfig = {\n          variant: EmptyStateVariant.large,\n          icon: LockIcon,\n          titleSize: TitleSizes.xl,\n          headingLevel: \"h2\" as TitleProps[\"headingLevel\"],\n        };\n        break;\n      case MASEmptyStateVariant.NoItems:\n        variantConfig = {\n          variant: EmptyStateVariant.large,\n          icon: PlusCircleIcon,\n          titleSize: TitleSizes.xl,\n          headingLevel: \"h2\" as TitleProps[\"headingLevel\"],\n        };\n        break;\n      case MASEmptyStateVariant.NoResult:\n        variantConfig = {\n          variant: EmptyStateVariant.large,\n          icon: SearchIcon,\n          titleSize: TitleSizes.lg,\n          headingLevel: \"h2\" as TitleProps[\"headingLevel\"],\n        };\n        break;\n      case MASEmptyStateVariant.UnexpectedError:\n        variantConfig = {\n          variant: EmptyStateVariant.full,\n          icon: ExclamationCircleIcon,\n          titleSize: TitleSizes.lg,\n          headingLevel: \"h1\" as TitleProps[\"headingLevel\"],\n        };\n        break;\n      case MASEmptyStateVariant.PageNotFound:\n        variantConfig = {\n          variant: EmptyStateVariant.full,\n          icon: NotFoundImg,\n          titleSize: TitleSizes.lg,\n          headingLevel: \"h1\" as TitleProps[\"headingLevel\"],\n        };\n        break;\n      default:\n        variantConfig = {\n          variant: masEmptyStateVariant || EmptyStateVariant.full,\n          icon: emptyStateIconProps?.icon,\n          titleSize: titleProps?.size,\n          headingLevel: titleProps?.headingLevel,\n        };\n        break;\n    }\n    return variantConfig;\n  };\n\n  const { variant, icon, titleSize, headingLevel } = getVariantConfig();\n\n  return (\n    <PFEmptyState\n      variant={variant}\n      className={css(\"pf-u-pt-2xl pf-u-pt-3xl-on-md\", className)}\n      {...restEmptyStateProps}\n    >\n      <EmptyStateIcon icon={icon} {...emptyStateIconProps} />\n      {title && (\n        <Title\n          {...restTitleProps}\n          headingLevel={headingLevel || \"h2\"}\n          size={titleSize}\n        >\n          {title}\n        </Title>\n      )}\n      {body && (\n        <EmptyStateBody {...restEmptyStateBodyProps}>{body}</EmptyStateBody>\n      )}\n      {buttonProps?.title && (\n        <Button variant={buttonVariant} onClick={onClick} {...restButtonProps}>\n          {buttonProps?.title}\n        </Button>\n      )}\n      {children}\n    </PFEmptyState>\n  );\n};\n","import { Component, ErrorInfo, ReactNode } from \"react\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport { PageSection, Button } from \"@patternfly/react-core\";\nimport { MASEmptyState, MASEmptyStateVariant } from \"@app/common\";\nimport \"./MASErrorBoundary.css\";\n\ntype Props = WithTranslation &\n  RouteComponentProps & {\n    children?: ReactNode;\n  };\n\ntype State = {\n  hasError?: boolean;\n};\n\nclass MASErrorBoundary extends Component<Props, State> {\n  state: State = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(): State {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error(\"error:\", error, errorInfo);\n  }\n\n  onClickButton = () => {\n    const { history } = this.props;\n    this.setState({ hasError: false });\n    history && history.push(\"/\");\n  };\n\n  render() {\n    const { t } = this.props;\n    const { hasError } = this.state;\n\n    if (hasError) {\n      return (\n        <PageSection padding={{ default: \"noPadding\" }} isFilled>\n          <MASEmptyState\n            emptyStateProps={{\n              variant: MASEmptyStateVariant.UnexpectedError,\n            }}\n            emptyStateIconProps={{\n              className: \"icon-color\",\n            }}\n            titleProps={{\n              title: t(\"common.something_went_wrong\"),\n            }}\n            emptyStateBodyProps={{\n              body: t(\"unexpected_error\"),\n            }}\n          >\n            <Button onClick={this.onClickButton}>\n              {t(\"go_to_kafka_instances\")}\n            </Button>\n          </MASEmptyState>\n        </PageSection>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nconst MASErrorBoundaryComponent = withRouter(\n  withTranslation()(MASErrorBoundary)\n);\nexport { MASErrorBoundaryComponent as MASErrorBoundary };\n","import {\n  FC,\n  useCallback,\n  FunctionComponent,\n  createContext,\n  useContext,\n  useState,\n} from \"react\";\nimport {\n  Pagination as PFPagination,\n  PaginationProps as PFPaginationProps,\n  PaginationVariant,\n} from \"@patternfly/react-core\";\n\nexport type PaginationProps = Omit<PFPaginationProps, \"children\" | \"ref\">;\n\nexport type PaginationContextProps = {\n  page: number | undefined;\n  perPage: number | undefined;\n  setPage: (page: number | undefined) => void;\n  setPerPage: (perPage: number | undefined) => void;\n};\n\nexport const PaginationContext = createContext<\n  PaginationContextProps | undefined\n>(undefined);\nexport const usePagination = (): PaginationContextProps | undefined =>\n  useContext(PaginationContext);\n\nexport const PaginationProvider: FC = ({ children }) => {\n  const [page, setPage] = useState<number | undefined>(1);\n  const [perPage, setPerPage] = useState<number | undefined>(10);\n\n  return (\n    <PaginationContext.Provider value={{ page, perPage, setPage, setPerPage }}>\n      {children}\n    </PaginationContext.Provider>\n  );\n};\n\nconst MASPagination: FunctionComponent<PaginationProps> = ({\n  itemCount,\n  variant = PaginationVariant.top,\n  isCompact,\n  titles,\n  ...restProps\n}) => {\n  const { setPage, setPerPage, perPage, page } = usePagination() || {};\n\n  const onSetPage = useCallback(\n    (_: unknown, newPage: number) => {\n      setPage && setPage(newPage);\n    },\n    [setPage]\n  );\n\n  const onPerPageSelect = useCallback(\n    (_: unknown, newPerPage: number) => {\n      setPage && setPage(1);\n      setPerPage && setPerPage(newPerPage);\n    },\n    [setPage, setPerPage]\n  );\n\n  return (\n    <PFPagination\n      itemCount={itemCount}\n      perPage={perPage}\n      page={page}\n      onSetPage={onSetPage}\n      variant={variant}\n      onPerPageSelect={onPerPageSelect}\n      isCompact={isCompact}\n      {...restProps}\n      titles={titles}\n    />\n  );\n};\n\nexport { MASPagination };\n","import { MouseEvent, createContext, LegacyRef, useContext } from \"react\";\nimport { InstanceStatus } from \"@app/utils\";\nimport { css } from \"@patternfly/react-styles\";\nimport \"./CustomRowWrapper.css\";\nimport { IRow, RowWrapperProps } from \"@patternfly/react-table\";\n\nexport type CustomRowWrapperContextProps = {\n  activeRow?: string;\n  onRowClick?: (event: MouseEvent, rowIndex?: number, row?: IRow) => void;\n  rowDataTestId?: string;\n  loggedInUser?: string;\n} & RowWrapperProps;\n\nconst CustomRowWrapperContext = createContext<CustomRowWrapperContextProps>({\n  activeRow: \"\",\n  onRowClick: () => {\n    // No-op\n  },\n  loggedInUser: \"\",\n});\n\nexport const CustomRowWrapperProvider = CustomRowWrapperContext.Provider;\n\nexport const CustomRowWrapper = (\n  rowWrapperProps: CustomRowWrapperContextProps\n) => {\n  const { activeRow, onRowClick, rowDataTestId, loggedInUser } = useContext(\n    CustomRowWrapperContext\n  );\n  const { trRef, className, rowProps, row, ...props } = rowWrapperProps;\n  const isRowDeleted =\n    row?.originalData?.status === InstanceStatus.DEPROVISION ||\n    row?.originalData?.status === InstanceStatus.DELETED;\n  const isLoggedInUserOwner = loggedInUser === row?.originalData?.owner;\n  const isRowDisabled = isRowDeleted || !isLoggedInUserOwner;\n\n  const ref =\n    trRef === undefined ? undefined : (trRef as LegacyRef<HTMLTableRowElement>);\n\n  const handleRowClick = (event: MouseEvent) => {\n    if (!isRowDeleted) {\n      onRowClick && onRowClick(event, rowProps?.rowIndex, row);\n    }\n  };\n\n  return (\n    <tr\n      data-testid={rowDataTestId}\n      tabIndex={!isRowDisabled ? 0 : undefined}\n      ref={ref}\n      className={css(\n        className,\n        \"pf-c-table-row__item\",\n        isRowDeleted\n          ? \"pf-m-disabled\"\n          : isLoggedInUserOwner && \"pf-m-selectable\",\n        !isRowDisabled &&\n          activeRow &&\n          activeRow === row?.originalData?.name &&\n          \"pf-m-selected\"\n      )}\n      hidden={row?.isExpanded !== undefined && !row?.isExpanded}\n      {...props}\n      onClick={handleRowClick}\n    />\n  );\n};\n","import { ReactNode, ReactElement } from \"react\";\nimport {\n  HeaderProps,\n  Table as PFTable,\n  TableBody,\n  TableBodyProps,\n  TableHeader,\n  TableProps as PFTableProps,\n} from \"@patternfly/react-table\";\nimport { css } from \"@patternfly/react-styles\";\nimport {\n  CustomRowWrapper,\n  CustomRowWrapperContextProps,\n  CustomRowWrapperProvider,\n} from \"./CustomRowWrapper\";\n\nexport type MASTableProps = CustomRowWrapperContextProps & {\n  tableProps: Omit<PFTableProps, \"children\"> & {\n    hasDefaultCustomRowWrapper?: boolean;\n    ouiaId?: string;\n  };\n  tableHeaderProps?: Omit<HeaderProps, \"children\">;\n  tableBodyProps?: Omit<TableBodyProps, \"children\">;\n  children?: ReactNode;\n};\n\nconst MASTable = ({\n  tableProps,\n  tableHeaderProps,\n  tableBodyProps,\n  children,\n  activeRow,\n  onRowClick,\n  rowDataTestId,\n  loggedInUser,\n}: MASTableProps): ReactElement => {\n  const {\n    cells,\n    rows,\n    actionResolver,\n    onSort,\n    sortBy,\n    \"aria-label\": ariaLabel,\n    variant,\n    className,\n    hasDefaultCustomRowWrapper = false,\n    ouiaId,\n    ...restProps\n  } = tableProps;\n\n  /**\n   * Handle CustomRowWrapper\n   */\n  if (hasDefaultCustomRowWrapper) {\n    restProps.rowWrapper = CustomRowWrapper;\n  }\n\n  return (\n    <CustomRowWrapperProvider\n      value={{\n        activeRow,\n        onRowClick,\n        rowDataTestId,\n        loggedInUser,\n      }}\n    >\n      <PFTable\n        className={css(\n          hasDefaultCustomRowWrapper && \"mas--streams-table-view__table\",\n          className\n        )}\n        cells={cells}\n        variant={variant}\n        rows={rows}\n        aria-label={ariaLabel}\n        actionResolver={actionResolver}\n        onSort={onSort}\n        sortBy={sortBy}\n        ouiaId={ouiaId}\n        {...restProps}\n      >\n        <TableHeader {...tableHeaderProps} />\n        <TableBody {...tableBodyProps} />\n        {children}\n      </PFTable>\n    </CustomRowWrapperProvider>\n  );\n};\n\nexport { MASTable };\n","import { FunctionComponent } from \"react\";\nimport {\n  ToolbarContent,\n  Toolbar,\n  ToolbarProps,\n  ToolbarItemProps as PFToolbarItemProps,\n  ToolbarToggleGroup,\n  ToolbarItem,\n  ToolbarToggleGroupProps,\n} from \"@patternfly/react-core\";\n\nexport type ToolbarItemProps = Omit<PFToolbarItemProps, \"children\"> & {\n  item: JSX.Element | undefined;\n};\nexport type MASToolbarProps = {\n  toolbarProps: Omit<ToolbarProps, \"children\" | \"ref\">;\n  toggleGroupProps?: Omit<ToolbarToggleGroupProps, \"children\">;\n  toggleGroupItems?: ToolbarToggleGroupProps[\"children\"];\n  toolbarItems?: ToolbarItemProps[];\n};\n\nconst MASToolbar: FunctionComponent<MASToolbarProps> = ({\n  toolbarProps,\n  toggleGroupProps,\n  toolbarItems,\n  toggleGroupItems,\n}) => {\n  const {\n    id,\n    clearAllFilters,\n    collapseListedFiltersBreakpoint = \"md\",\n    inset,\n    ...restToolbarProps\n  } = toolbarProps;\n\n  return (\n    <>\n      <Toolbar\n        id={id}\n        clearAllFilters={clearAllFilters}\n        inset={inset}\n        collapseListedFiltersBreakpoint={collapseListedFiltersBreakpoint}\n        ouiaId=\"toolbar\"\n        {...restToolbarProps}\n      >\n        <ToolbarContent>\n          {toggleGroupProps && (\n            <ToolbarToggleGroup\n              {...toggleGroupProps}\n              toggleIcon={toggleGroupProps.toggleIcon}\n            >\n              {toggleGroupItems}\n            </ToolbarToggleGroup>\n          )}\n          {toolbarItems?.map((toolbarItem, index) => {\n            const {\n              key = \"mas\",\n              variant,\n              className,\n              id,\n              alignment,\n              item,\n              ...restItemProps\n            } = toolbarItem;\n            return (\n              <ToolbarItem\n                key={`${key}-${index}`}\n                variant={variant}\n                className={className}\n                id={id}\n                alignment={alignment}\n                {...restItemProps}\n              >\n                {item}\n              </ToolbarItem>\n            );\n          })}\n        </ToolbarContent>\n      </Toolbar>\n    </>\n  );\n};\n\nexport { MASToolbar };\n","import { useEffect } from \"react\";\n\n// a custom hook for setting the page title\nexport function useDocumentTitle(title: string): void {\n  useEffect(() => {\n    const originalTitle = document.title;\n    document.title = title;\n\n    return () => {\n      document.title = originalTitle;\n    };\n  }, [title]);\n}\n","import { FunctionComponent } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { PageSection, Button } from \"@patternfly/react-core\";\nimport { useHistory } from \"react-router-dom\";\nimport { MASEmptyState, MASEmptyStateVariant } from \"@app/common\";\n\nconst MASPageNotFound: FunctionComponent = () => {\n  const { t } = useTranslation([\"kasTemporaryFixMe\"]);\n\n  function GoHomeBtn() {\n    const history = useHistory();\n    function handleClick() {\n      history.push(\"/\");\n    }\n    return <Button onClick={handleClick}>{t(\"return_to_home_page\")}</Button>;\n  }\n\n  return (\n    <PageSection padding={{ default: \"noPadding\" }} isFilled>\n      <MASEmptyState\n        emptyStateProps={{ variant: MASEmptyStateVariant.PageNotFound }}\n        titleProps={{ title: t(\"404_page_does_not_exist\") }}\n        emptyStateBodyProps={{\n          body: t(\"we_cannot_find_the_page_you_are_looking_for\"),\n        }}\n      >\n        <GoHomeBtn />\n      </MASEmptyState>\n    </PageSection>\n  );\n};\n\nexport { MASPageNotFound };\n","import { FC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  PageSection,\n  PageSectionVariants,\n  Text,\n  TextContent,\n} from \"@patternfly/react-core\";\nimport { ServiceAccountsTableConnected } from \"@app/modules/ServiceAccounts/components/ServiceAccountsTableConnected\";\nimport \"@app/modules/styles.css\";\n\nconst ServiceAccounts: FC = () => {\n  const { t } = useTranslation([\"kasTemporaryFixMe\"]);\n  return (\n    <>\n      <PageSection\n        variant={PageSectionVariants.light}\n        className=\"pf-m-padding-on-xl\"\n        padding={{ default: \"noPadding\" }}\n      >\n        <TextContent>\n          <Text component=\"h1\"> {t(\"serviceAccount.service_accounts\")}</Text>\n          <Text component=\"p\">\n            {t(\"serviceAccount.service_accounts_title_header_info\")}\n          </Text>\n        </TextContent>\n      </PageSection>\n      <ServiceAccountsTableConnected />\n    </>\n  );\n};\n\nexport { ServiceAccounts };\n","import { FC } from \"react\";\nimport { ServiceAccounts } from \"./ServiceAccounts\";\nimport { ModalProvider } from \"@rhoas/app-services-ui-components\";\nimport { ModalLoader } from \"@app/modals\";\n\n// Federation version of ServiceAccounts\n\nconst ServiceAccountsFederated: FC = () => {\n  return (\n    <ModalProvider>\n      <ServiceAccounts />\n      <ModalLoader />\n    </ModalProvider>\n  );\n};\n\nexport default ServiceAccountsFederated;\n","import { ComponentType, ReactElement } from \"react\";\nimport { Route, RouteComponentProps, Switch } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { MASPageNotFound } from \"@app/common/MASPageNotFound/MASPageNotFound\";\nimport { useDocumentTitle } from \"@app/utils/useDocumentTitle\";\nimport { ServiceAccountsConnected } from \"@app/modules/ServiceAccounts\";\n\nexport interface IAppRoute {\n  label?: string; // Excluding the label will exclude the route from the nav sidebar in AppLayout\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  component: ComponentType<RouteComponentProps<any>> | ComponentType<any>;\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n  exact?: boolean;\n  path: string;\n  title: string;\n  isAsync?: boolean;\n  routes?: undefined;\n}\n\nexport interface IAppRouteGroup {\n  label: string;\n  routes: IAppRoute[];\n}\n\nexport type AppRouteConfig = IAppRoute | IAppRouteGroup;\n\nconst routes: AppRouteConfig[] = [\n  {\n    component: ServiceAccountsConnected,\n    exact: true,\n    label: \"Service Accounts\",\n    path: \"/service-accounts\",\n    title: \"Service Accounts\",\n  },\n];\n\n// a custom hook for sending focus to the primary content container\n// after a view has loaded so that subsequent press of tab key\n// sends focus directly to relevant content\n\n// TODO: restore when react-router-last-location officially supports react 17\n\n// const useA11yRouteChange = (isAsync: boolean) => {\n//   const lastNavigation = useLastLocation();\n//   React.useEffect(() => {\n//     if (!isAsync && lastNavigation !== null) {\n//       routeFocusTimer = accessibleRouteChangeHandler();\n//     }\n//     return () => {\n//       window.clearTimeout(routeFocusTimer);\n//     };\n//   }, [isAsync, lastNavigation]);\n// };\n\nconst RouteWithTitleUpdates = ({\n  component: Component,\n  // isAsync = false,\n  title,\n  ...rest\n}: IAppRoute) => {\n  // useA11yRouteChange(isAsync);\n  useDocumentTitle(title);\n\n  function routeWithTitle(routeProps: RouteComponentProps) {\n    return <Component {...rest} {...routeProps} />;\n  }\n\n  return <Route render={routeWithTitle} />;\n};\n\nconst PageNotFound = ({ title }: { title: string }) => {\n  useDocumentTitle(title);\n  return <Route component={MASPageNotFound} />;\n};\n\nconst flattenedRoutes: IAppRoute[] = routes.reduce(\n  (flattened, route) => [\n    ...flattened,\n    ...(route.routes ? route.routes : [route]),\n  ],\n  [] as IAppRoute[]\n);\n\nconst AppRoutes = (): ReactElement => {\n  const { t } = useTranslation([\"kasTemporaryFixMe\"]);\n  return (\n    // <LastLocationProvider>\n    <Switch>\n      {flattenedRoutes.map(\n        ({ path, exact, component, title, isAsync }, idx) => (\n          <RouteWithTitleUpdates\n            path={path}\n            exact={exact}\n            component={component}\n            key={idx}\n            title={title}\n            isAsync={isAsync}\n          />\n        )\n      )}\n      <PageNotFound title={t(\"404_page_does_not_exist\")} />\n    </Switch>\n    // </LastLocationProvider>\n  );\n};\n\nexport { AppRoutes, routes };\n","import { FunctionComponent } from \"react\";\nimport { ServiceAccounts } from \"./ServiceAccounts\";\n\nexport const ServiceAccountsConnected: FunctionComponent = () => {\n  return <ServiceAccounts />;\n};\n","export default __webpack_public_path__ + \"f940137c.svg\";","import Keycloak, { KeycloakInstance, KeycloakTokenParsed } from \"keycloak-js\";\n\nexport let keycloak: KeycloakInstance | undefined;\n\n/**\n * Get keycloak instance\n *\n * @return an initiated keycloak instance or `undefined`\n * if keycloak isn't configured\n *\n */\nexport const getKeycloakInstance = async (): Promise<\n  KeycloakInstance | undefined\n> => {\n  if (!keycloak) await init();\n  return keycloak;\n};\n\n/**\n * Initiate keycloak instance.\n *\n * Set keycloak to undefined if\n * keycloak isn't configured\n *\n */\nexport const init = async (): Promise<void> => {\n  try {\n    keycloak = Keycloak();\n    if (keycloak) {\n      await keycloak.init({\n        onLoad: \"login-required\",\n      });\n    }\n  } catch {\n    keycloak = undefined;\n    console.warn(\n      \"Auth: Unable to initialize keycloak. Client side will not be configured to use authentication\"\n    );\n  }\n};\n\n/**\n * Use keycloak update token function to retrieve\n * keycloak token\n *\n * @return keycloak token or empty string if keycloak\n * isn't configured\n *\n */\nexport const getKeyCloakToken = async (): Promise<string> => {\n  await keycloak?.updateToken(50);\n  if (keycloak?.token) return keycloak.token;\n  console.error(\"No keycloak token available\");\n  return \"foo\";\n};\n\n/**\n * Use keycloak update token function to retrieve\n * keycloak token\n *\n * @return keycloak token or empty string if keycloak\n * isn't configured\n *\n */\nexport const getParsedKeyCloakToken =\n  async (): Promise<KeycloakTokenParsed> => {\n    await keycloak?.updateToken(50);\n    if (keycloak?.tokenParsed) return keycloak.tokenParsed;\n    console.error(\"No keycloak token available\");\n    return {} as KeycloakTokenParsed;\n  };\n\n/**\n * logout of keycloak, clear cache and offline store then redirect to\n * keycloak login page\n *\n * @param keycloak the keycloak instance\n * @param client offix client\n *\n */\nexport const logout = async (\n  keycloak: Keycloak.KeycloakInstance | undefined\n): Promise<void> => {\n  if (keycloak) {\n    await keycloak.logout();\n  }\n};\n","import { FunctionComponent, createContext } from \"react\";\nimport { KeycloakInstance, KeycloakProfile } from \"keycloak-js\";\nimport { Auth, AuthContext } from \"@app/auth/Auth\";\nimport {\n  getKeyCloakToken,\n  getParsedKeyCloakToken,\n} from \"@app/auth/keycloak/keycloakAuth\";\n\n// This is a context which can manage the keycloak\nexport interface IKeycloakContext {\n  keycloak?: KeycloakInstance | undefined;\n  profile?: KeycloakProfile | undefined;\n}\n\nexport const KeycloakContext = createContext<IKeycloakContext>({\n  keycloak: undefined,\n});\n\nexport const KeycloakAuthProvider: FunctionComponent = (props) => {\n  const getUsername = () => {\n    return getParsedKeyCloakToken().then(\n      (token) => (token as Record<string, string>)[\"username\"]\n    );\n  };\n\n  const isOrgAdmin = () => {\n    return getParsedKeyCloakToken().then(\n      (token) => (token as Record<string, boolean>)[\"is_org_admin\"]\n    );\n  };\n\n  const authTokenContext = {\n    sas_ui: {\n      getToken: getKeyCloakToken,\n    },\n    getUsername,\n    isOrgAdmin,\n  } as Auth;\n  return (\n    <AuthContext.Provider value={authTokenContext}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n","import { FunctionComponent, useState, useContext } from \"react\";\nimport { NavLink, useLocation, useHistory } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Nav,\n  NavList,\n  NavItem,\n  NavExpandable,\n  Page,\n  PageHeader,\n  PageSidebar,\n  SkipToContent,\n  PageHeaderTools,\n} from \"@patternfly/react-core\";\nimport { routes, IAppRoute, IAppRouteGroup } from \"@app/routes\";\nimport logo from \"@app/bgimages/Patternfly-Logo.svg\";\nimport { KeycloakContext } from \"@app/auth/keycloak/KeycloakContext\";\n\nconst AppLayout: FunctionComponent = ({ children }) => {\n  const [isNavOpen, setIsNavOpen] = useState(true);\n  const [isMobileView, setIsMobileView] = useState(true);\n  const [isNavOpenMobile, setIsNavOpenMobile] = useState(false);\n\n  const keycloakContext = useContext(KeycloakContext);\n\n  const location = useLocation();\n\n  const onNavToggleMobile = () => {\n    setIsNavOpenMobile(!isNavOpenMobile);\n  };\n  const onNavToggle = () => {\n    setIsNavOpen(!isNavOpen);\n  };\n  const onPageResize = (props: { mobileView: boolean; windowSize: number }) => {\n    setIsMobileView(props.mobileView);\n  };\n\n  const { t } = useTranslation([\"kasTemporaryFixMe\"]);\n\n  function LogoImg() {\n    const history = useHistory();\n    function handleClick() {\n      history.push(\"/\");\n    }\n    return <img src={logo} onClick={handleClick} alt=\"PatternFly Logo\" />;\n  }\n\n  if (!keycloakContext.keycloak) {\n    return (\n      // TODO handle this error properly!\n      <div>403 Unauthorized</div>\n    );\n  }\n\n  if (!keycloakContext.keycloak.authenticated) {\n    // force the user to log in\n    keycloakContext.keycloak?.login();\n    return <></>;\n  }\n\n  const email = keycloakContext.keycloak.profile?.email;\n\n  const HeaderTools = <PageHeaderTools>{email}</PageHeaderTools>;\n\n  const Header = (\n    <PageHeader\n      logo={<LogoImg />}\n      showNavToggle\n      isNavOpen={isNavOpen}\n      headerTools={HeaderTools}\n      onNavToggle={isMobileView ? onNavToggleMobile : onNavToggle}\n      aria-label={t(\"global_navigation\")}\n    />\n  );\n\n  const renderNavItem = (route: IAppRoute, index: number) => {\n    return (\n      <NavItem key={`${route.label}-${index}`} id={`${route.label}-${index}`}>\n        <NavLink exact to={route.path} activeClassName=\"pf-m-current\">\n          {route?.label && t(route.label)}\n        </NavLink>\n      </NavItem>\n    );\n  };\n\n  const renderNavGroup = (group: IAppRouteGroup, groupIndex: number) => (\n    <NavExpandable\n      key={`${group.label}-${groupIndex}`}\n      id={`${group.label}-${groupIndex}`}\n      title={group.label}\n      isActive={group.routes.some((route) => route.path === location.pathname)}\n      // aria-label={t()}\n    >\n      {group.routes.map(\n        (route, idx) => route.label && renderNavItem(route, idx)\n      )}\n    </NavExpandable>\n  );\n\n  const Navigation = (\n    <Nav\n      id=\"nav-primary-simple\"\n      role=\"navigation\"\n      theme=\"dark\"\n      aria-label={t(\"global\")}\n    >\n      <NavList id=\"nav-list-simple\">\n        {routes.map(\n          (route, idx) =>\n            route.label &&\n            (!route.routes\n              ? renderNavItem(route, idx)\n              : renderNavGroup(route, idx))\n        )}\n      </NavList>\n    </Nav>\n  );\n  const Sidebar = (\n    <PageSidebar\n      theme=\"dark\"\n      nav={Navigation}\n      isNavOpen={isMobileView ? isNavOpenMobile : isNavOpen}\n    />\n  );\n  const PageSkipToContent = (\n    <SkipToContent href=\"#primary-app-container\">\n      {t(\"skip_to_content\")}\n    </SkipToContent>\n  );\n  return (\n    <Page\n      mainContainerId=\"primary-app-container\"\n      role=\"main\"\n      header={Header}\n      sidebar={Sidebar}\n      onPageResize={onPageResize}\n      skipToContent={PageSkipToContent}\n    >\n      {children}\n    </Page>\n  );\n};\n\nexport { AppLayout };\n","import { FunctionComponent, useState, useEffect, Suspense } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport {\n  BasenameContext,\n  Config,\n  ConfigContext,\n} from \"@rhoas/app-services-ui-shared\";\nimport \"@patternfly/patternfly/patternfly.css\";\nimport \"@patternfly/patternfly/utilities/Accessibility/accessibility.css\";\nimport \"@patternfly/patternfly/utilities/Sizing/sizing.css\";\nimport \"@patternfly/patternfly/utilities/Spacing/spacing.css\";\nimport \"@patternfly/patternfly/utilities/Display/display.css\";\nimport \"@patternfly/patternfly/utilities/Flex/flex.css\";\nimport { AppLayout } from \"@app/AppLayout/AppLayout\";\nimport { AppRoutes } from \"@app/routes\";\nimport \"@app/app.css\";\nimport { getKeycloakInstance } from \"./auth/keycloak/keycloakAuth\";\nimport { MASLoading } from \"@app/common\";\nimport {\n  KeycloakAuthProvider,\n  KeycloakContext,\n} from \"@app/auth/keycloak/KeycloakContext\";\nimport {\n  MASErrorBoundary,\n  PaginationProvider,\n  AlertProvider,\n} from \"@app/common\";\nimport { I18nProvider, ModalProvider } from \"@rhoas/app-services-ui-components\";\nimport { ModalLoader } from \"@app/modals\";\n\nlet keycloak: Keycloak.KeycloakInstance | undefined;\ndeclare const __BASE_PATH__: string;\n\nconst App: FunctionComponent = () => {\n  const [initialized, setInitialized] = useState(false);\n\n  // Initialize the client\n  useEffect(() => {\n    const init = async () => {\n      keycloak = await getKeycloakInstance();\n      setInitialized(true);\n    };\n    init();\n  }, []);\n\n  if (!initialized) return <MASLoading />;\n\n  return (\n    <BasenameContext.Provider value={{ getBasename: () => \"\" }}>\n      <ConfigContext.Provider\n        value={\n          {\n            kas: {\n              apiBasePath: __BASE_PATH__,\n            },\n            ams: {\n              apiBasePath: __BASE_PATH__,\n            },\n          } as Config\n        }\n      >\n        <I18nProvider\n          lng=\"en\"\n          resources={{\n            en: {\n              kasTemporaryFixMe: () =>\n                import(\"./kas-ui-dont-modify-temporay.json\"),\n            },\n          }}\n          debug={true}\n        >\n          {\" \"}\n          <KeycloakContext.Provider\n            value={{ keycloak, profile: keycloak?.profile }}\n          >\n            <KeycloakAuthProvider>\n              <AlertProvider>\n                <Router>\n                  <Suspense fallback={<MASLoading />}>\n                    <MASErrorBoundary>\n                      <PaginationProvider>\n                        <ModalProvider>\n                          <AppLayout>\n                            <AppRoutes />\n                          </AppLayout>\n                          <ModalLoader />\n                        </ModalProvider>\n                      </PaginationProvider>\n                    </MASErrorBoundary>\n                  </Suspense>\n                </Router>\n              </AlertProvider>\n            </KeycloakAuthProvider>\n          </KeycloakContext.Provider>\n        </I18nProvider>\n      </ConfigContext.Provider>\n    </BasenameContext.Provider>\n  );\n};\nexport { App };\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"@app/index\";\n\nif (process.env.NODE_ENV !== \"production\") {\n  const config = {\n    rules: [\n      {\n        id: \"color-contrast\",\n        enabled: false,\n      },\n    ],\n  };\n  // eslint-disable-next-line @typescript-eslint/no-var-requires, no-undef\n  const axe = require(\"react-axe\");\n  axe(React, ReactDOM, 1000, config);\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\") as HTMLElement);\n"],"names":["AuthContext","undefined","useAuth","answer","useContext","Error","AlertProvider","children","alerts","setAlerts","useState","timers","setTimers","useEffect","timersKeys","map","timer","key","timeOuts","filter","alert","includes","id","timeOut","setTimeout","hideAlert","forEach","clearTimeout","el","AlertContext","value","addAlert","props","Date","getTime","toString","MASAlertToastGroup","onCloseAlert","AlertGroup","isToast","variant","title","description","dataTestId","rest","Alert","isLiveRegion","AlertVariant","variantLabel","actionClose","AlertActionCloseButton","onClose","isModalOpen","modalProps","confirmButtonProps","cancelButtonProps","handleModalToggle","textProps","selectedItemData","textInputProps","ModalVariant","titleIconVariant","ariaLabel","showClose","restModalProps","buttonConfirmVariant","ButtonVariant","onClick","onClickConfirmButton","isDisabled","isDisabledConfirmButton","label","confirmActionLabel","isLoading","restConfirmButtonProps","cancelButtonId","cancelButtonKey","cancelButtonVariant","cancelActionLabel","restCancelButtonProps","className","restTextProps","onChange","onKeyPress","showTextInput","restInputFieldProps","Modal","isOpen","appendTo","actions","Button","Text","dangerouslySetInnerHTML","__html","htmlFor","TextInput","name","type","autoFocus","MASEmptyStateVariant","titleProps","buttonProps","emptyStateIconProps","emptyStateProps","emptyStateBodyProps","buttonVariant","restButtonProps","restTitleProps","body","restEmptyStateBodyProps","masEmptyStateVariant","GettingStarted","restEmptyStateProps","NotFoundImg","src","alt","width","icon","titleSize","headingLevel","variantConfig","EmptyStateVariant","TitleSizes","NoAccess","NoItems","NoResult","UnexpectedError","PageNotFound","size","getVariantConfig","EmptyStateIcon","Title","EmptyStateBody","Component","state","hasError","onClickButton","history","this","setState","push","static","componentDidCatch","error","errorInfo","console","render","t","PageSection","padding","default","isFilled","MASErrorBoundaryComponent","withRouter","withTranslation","PaginationContext","createContext","usePagination","PaginationProvider","page","setPage","perPage","setPerPage","Provider","CustomRowWrapperContext","activeRow","onRowClick","loggedInUser","CustomRowWrapperProvider","rowWrapperProps","rowDataTestId","trRef","rowProps","row","isRowDeleted","originalData","status","isLoggedInUserOwner","owner","isRowDisabled","ref","tabIndex","hidden","isExpanded","event","rowIndex","MASTable","tableProps","tableHeaderProps","tableBodyProps","cells","rows","actionResolver","onSort","sortBy","hasDefaultCustomRowWrapper","ouiaId","restProps","rowWrapper","TableHeader","TableBody","MASToolbar","toolbarProps","toggleGroupProps","toolbarItems","toggleGroupItems","clearAllFilters","collapseListedFiltersBreakpoint","inset","restToolbarProps","Toolbar","ToolbarContent","ToolbarToggleGroup","toggleIcon","toolbarItem","index","alignment","item","restItemProps","ToolbarItem","useDocumentTitle","originalTitle","document","MASPageNotFound","useTranslation","useHistory","PageSectionVariants","TextContent","component","ServiceAccountsTableConnected","routes","exact","path","RouteWithTitleUpdates","Route","routeProps","flattenedRoutes","reduce","flattened","route","AppRoutes","Switch","isAsync","idx","getKeycloakInstance","init","onLoad","warn","getKeyCloakToken","updateToken","token","getParsedKeyCloakToken","tokenParsed","KeycloakContext","keycloak","KeycloakAuthProvider","authTokenContext","sas_ui","getToken","getUsername","then","isOrgAdmin","Auth","AppLayout","isNavOpen","setIsNavOpen","isMobileView","setIsMobileView","isNavOpenMobile","setIsNavOpenMobile","keycloakContext","location","useLocation","authenticated","login","email","profile","HeaderTools","PageHeaderTools","Header","PageHeader","logo","showNavToggle","headerTools","onNavToggle","renderNavItem","NavItem","NavLink","to","activeClassName","Navigation","Nav","role","theme","NavList","group","groupIndex","NavExpandable","isActive","some","pathname","Sidebar","PageSidebar","nav","PageSkipToContent","SkipToContent","href","Page","mainContainerId","header","sidebar","onPageResize","mobileView","skipToContent","initialized","setInitialized","BasenameContext","getBasename","ConfigContext","kas","apiBasePath","__BASE_PATH__","ams","I18nProvider","lng","resources","en","kasTemporaryFixMe","debug","Suspense","fallback","ModalProvider","getElementById"],"sourceRoot":""}