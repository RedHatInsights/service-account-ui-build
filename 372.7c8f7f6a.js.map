{"version":3,"file":"372.7c8f7f6a.js","mappings":"0QAkBA,MAAMA,EAEF,EAAGC,WAAUC,iBAAgBC,QAAOC,gBACtC,MAAM,EAAEC,IAAM,IAAAC,gBAAe,CAAC,sBACxBC,GAAO,UAEXC,KAAOC,YAAaC,KAClB,IAAAC,cAAe,CAAEH,IAAK,CAAC,IACrB,SAAEI,IAAa,IAAAC,aAAc,CAAC,GAE7BC,EAAWC,IAAgB,IAAAC,WAAkB,GAE9CC,EAAoB,KACxBb,GAAW,EAwDb,OACE,SAAC,KAAW,eACVc,aAAa,EACbD,kBAAmBA,EACnBd,MAAOA,EACPgB,mBAAoB,CAClBC,QAAS,IA3Dc,CAC3BlB,IACG,iD,MACH,MAAMmB,EAAmBnB,aAAc,EAAdA,EAAgBoB,GACzC,QAAyBC,IAArBF,EACF,MAAM,IAAIG,MAAM,kCAElB,MAAMC,QAAoBlB,aAAI,EAAJA,EAAMmB,OAAOC,WACvC,GAAIF,EAAa,CACf,MAAMG,EAAc,IAAI,EAAAC,YACtB,IAAI,EAAAC,cAAc,CAChBL,cACAf,cAGJK,GAAa,GAEb,UACQa,EACHG,yBAAyBV,GACzBW,MAAK,KACJf,IACAF,GAAa,GACbH,GACEA,EAAS,CACPT,MAAOE,EACL,sDACA,CACE4B,KAAM/B,aAAc,EAAdA,EAAgB+B,OAG1BC,QAAS,EAAAC,aAAA,UAEblC,GAAYA,GAAU,G,CAE1B,MAAOmC,GACP,IAAIC,GACA,QAAkBD,KACpBC,EAAuB,QAAd,EAAAD,EAAME,gBAAQ,eAAEC,KAAKF,QAGhCpB,IACAF,GAAa,GACbH,GACEA,EAAS,CACPT,MAAOE,EAAE,+BACT6B,QAAS,EAAAC,aAAA,OACTK,YAAaH,G,EAIvB,IASQI,CAAqBvC,GACvBwC,MAAO,SACP5B,cACD,WAED,0BACE,uBAAIZ,aAAc,EAAdA,EAAgB+B,OAAS,IAAE5B,EAAE,uCAGtC,EAIH,G","sources":["webpack://sas-ui/./src/app/modules/ServiceAccounts/dialogs/DeleteServiceAccount/DeleteServiceAccount.tsx"],"sourcesContent":["import { FunctionComponent, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { AlertVariant } from \"@patternfly/react-core\";\nimport { DeleteModal } from \"@app/common\";\nimport { isServiceApiError } from \"@app/utils\";\nimport {\n  Configuration,\n  SecurityApi,\n  ServiceAccountListItem,\n} from \"@rhoas/kafka-management-sdk\";\nimport {\n  BaseModalProps,\n  DeleteServiceAccountProps,\n  useAlert,\n  useConfig,\n} from \"@rhoas/app-services-ui-shared\";\nimport { useAuth } from \"@app/auth/Auth\";\n\nconst DeleteServiceAccount: FunctionComponent<\n  DeleteServiceAccountProps & BaseModalProps\n> = ({ onDelete, serviceAccount, title, hideModal }) => {\n  const { t } = useTranslation([\"kasTemporaryFixMe\"]);\n  const auth = useAuth();\n  const {\n    kas: { apiBasePath: basePath },\n  } = useConfig() || { kas: {} };\n  const { addAlert } = useAlert() || {};\n\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const handleModalToggle = () => {\n    hideModal();\n  };\n\n  const deleteServiceAccount = async (\n    serviceAccount: ServiceAccountListItem | undefined\n  ) => {\n    const serviceAccountId = serviceAccount?.id;\n    if (serviceAccountId === undefined) {\n      throw new Error(\"service account id not defined\");\n    }\n    const accessToken = await auth?.sas_ui.getToken();\n    if (accessToken) {\n      const apisService = new SecurityApi(\n        new Configuration({\n          accessToken,\n          basePath,\n        })\n      );\n      setIsLoading(true);\n\n      try {\n        await apisService\n          .deleteServiceAccountById(serviceAccountId)\n          .then(() => {\n            handleModalToggle();\n            setIsLoading(false);\n            addAlert &&\n              addAlert({\n                title: t(\n                  \"serviceAccount.service_account_successfully_deleted\",\n                  {\n                    name: serviceAccount?.name,\n                  }\n                ),\n                variant: AlertVariant.success,\n              });\n            onDelete && onDelete();\n          });\n      } catch (error) {\n        let reason: string | undefined;\n        if (isServiceApiError(error)) {\n          reason = error.response?.data.reason;\n        }\n\n        handleModalToggle();\n        setIsLoading(false);\n        addAlert &&\n          addAlert({\n            title: t(\"common.something_went_wrong\"),\n            variant: AlertVariant.danger,\n            description: reason,\n          });\n      }\n    }\n  };\n\n  return (\n    <DeleteModal\n      isModalOpen={true}\n      handleModalToggle={handleModalToggle}\n      title={title}\n      confirmButtonProps={{\n        onClick: () =>\n          deleteServiceAccount(serviceAccount as ServiceAccountListItem),\n        label: \"Delete\",\n        isLoading,\n      }}\n    >\n      <p>\n        <b>{serviceAccount?.name}</b> {t(\"serviceAccount.will_be_deleted\")}\n      </p>\n    </DeleteModal>\n  );\n};\n\nexport { DeleteServiceAccount };\nexport default DeleteServiceAccount;\n"],"names":["DeleteServiceAccount","onDelete","serviceAccount","title","hideModal","t","useTranslation","auth","kas","apiBasePath","basePath","useConfig","addAlert","useAlert","isLoading","setIsLoading","useState","handleModalToggle","isModalOpen","confirmButtonProps","onClick","serviceAccountId","id","undefined","Error","accessToken","sas_ui","getToken","apisService","SecurityApi","Configuration","deleteServiceAccountById","then","name","variant","AlertVariant","error","reason","response","data","description","deleteServiceAccount","label"],"sourceRoot":""}