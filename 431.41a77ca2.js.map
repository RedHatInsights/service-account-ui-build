{"version":3,"file":"431.41a77ca2.js","mappings":"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","sources":["webpack://sas-ui/./src/app/auth/Auth.ts","webpack://sas-ui/./src/app/common/DeleteModal/DeleteModal.tsx","webpack://sas-ui/./src/app/common/MASEmptyState/MASEmptyState.tsx","webpack://sas-ui/./src/app/common/MASErrorBoundary/MASErrorBoundary.tsx","webpack://sas-ui/./src/app/common/MASPagination/MASPagination.tsx","webpack://sas-ui/./src/app/common/MASTable/CustomRowWrapper.tsx","webpack://sas-ui/./src/app/common/MASTable/MASTable.tsx","webpack://sas-ui/./src/app/common/MASToolbar/MASToolbar.tsx","webpack://sas-ui/./src/app/modules/ServiceAccounts/ServiceAccounts.tsx","webpack://sas-ui/./src/app/modules/ServiceAccounts/ServiceAccountsFederated.tsx"],"sourcesContent":["import React, { useContext } from \"react\";\n\n/**\n * The Auth object provides information about the authenticated user\n */\nexport type Auth = {\n  /**\n   * Get the username of the authenticated user\n   */\n  getUsername: () => Promise<string> | undefined;\n  /**\n   * Get the is_org_admin of the authenticated user\n   */\n  isOrgAdmin: () => Promise<boolean> | undefined;\n\n  sas_ui: {\n    /**\n     * Get the token for accessing Service Accounts UI\n     */\n    getToken: () => Promise<string> | undefined;\n  };\n};\n\n/**\n * The AuthContext allows access to the Auth context\n */\nexport const AuthContext: React.Context<Auth | undefined> = React.createContext<\n  Auth | undefined\n>(undefined);\n\n/**\n * useAuth is a custom hook that is a shorthand for useContext(AuthContext)\n */\nexport const useAuth = (): Auth => {\n  const answer = useContext(AuthContext);\n  if (answer === undefined) {\n    throw new Error(\"must be used inside an AuthContext provider\");\n  }\n  return answer;\n};\n","import {\n  ReactNode,\n  FunctionComponent,\n  ReactElement,\n  KeyboardEvent,\n} from \"react\";\nimport {\n  Button,\n  ButtonProps,\n  ButtonVariant,\n  Modal,\n  ModalProps,\n  ModalVariant,\n  Text,\n  TextInput,\n  TextInputProps,\n  TextProps,\n} from \"@patternfly/react-core\";\nimport { getModalAppendTo } from \"@app/utils/utils\";\nimport \"./DeleteModal.css\";\n\nexport type ConfirmButtonProps<T> = Omit<\n  ButtonProps,\n  \"children\" | \"onClick\"\n> & {\n  id?: string;\n  key?: string;\n  label?: string;\n  onClick?: (data?: T) => Promise<void> | void;\n  \"data-testid\"?: string;\n};\n\nexport type NestedModalProps = Omit<ModalProps, \"children\" | \"ref\">;\n\nexport type CancelButtonProps = Omit<ButtonProps, \"children\"> & {\n  id?: string;\n  key?: string;\n  label?: string;\n};\n\nexport type NestedTextProps = Omit<TextProps, \"children\"> & {\n  description?: string;\n};\n\nexport type NestedTextInputProps = Omit<TextInputProps, \"onKeyPress\"> & {\n  showTextInput: boolean;\n  label: string;\n  value: string | undefined;\n  onKeyPress: (e: KeyboardEvent) => void;\n};\n\nexport type DeleteModalProps<T> = {\n  isModalOpen: boolean;\n  title?: string;\n  modalProps?: NestedModalProps;\n  handleModalToggle: () => void;\n  children?: ReactNode;\n  selectedItemData?: T;\n  confirmButtonProps?: ConfirmButtonProps<T>;\n  cancelButtonProps?: CancelButtonProps;\n  textProps?: NestedTextProps;\n  textInputProps?: NestedTextInputProps;\n};\n\nexport const DeleteModal = <T,>({\n  isModalOpen,\n  title,\n  modalProps,\n  confirmButtonProps,\n  cancelButtonProps,\n  handleModalToggle,\n  textProps,\n  children,\n  selectedItemData,\n  textInputProps,\n}: DeleteModalProps<T>): ReactElement => {\n  const {\n    variant = ModalVariant.small,\n    titleIconVariant = \"warning\",\n    [\"aria-label\"]: ariaLabel,\n    showClose = true,\n    ...restModalProps\n  } = modalProps || {};\n\n  const {\n    id = \"confirm__button\",\n    key = \"confirm-button\",\n    variant: buttonConfirmVariant = ButtonVariant.danger,\n    onClick: onClickConfirmButton,\n    isDisabled: isDisabledConfirmButton,\n    label: confirmActionLabel = \"Delete\",\n    isLoading,\n    ...restConfirmButtonProps\n  } = confirmButtonProps || {};\n\n  const {\n    id: cancelButtonId = \"cancel__button\",\n    key: cancelButtonKey = '\"cancel-button',\n    variant: cancelButtonVariant = ButtonVariant.link,\n    label: cancelActionLabel = \"Cancel\",\n    ...restCancelButtonProps\n  } = cancelButtonProps || {};\n\n  const {\n    className = \"delete-item__modal--text\",\n    description,\n    ...restTextProps\n  } = textProps || {};\n  const {\n    label = \"\",\n    value,\n    onChange,\n    onKeyPress,\n    showTextInput,\n    ...restInputFieldProps\n  } = textInputProps || {};\n\n  const ConfirmDelete: FunctionComponent = () => {\n    if (showTextInput) {\n      return (\n        <>\n          <label\n            htmlFor=\"mas-name-input\"\n            dangerouslySetInnerHTML={{ __html: label }}\n          />\n          <TextInput\n            id=\"name__input\"\n            name=\"mas-name-input\"\n            type=\"text\"\n            value={value}\n            onChange={onChange}\n            onKeyPress={onKeyPress}\n            autoFocus={true}\n            {...restInputFieldProps}\n          />\n        </>\n      );\n    } else {\n      return <></>;\n    }\n  };\n\n  return (\n    <Modal\n      variant={variant}\n      isOpen={isModalOpen}\n      aria-label={ariaLabel}\n      title={title}\n      titleIconVariant={titleIconVariant}\n      showClose={showClose}\n      onClose={handleModalToggle}\n      appendTo={getModalAppendTo}\n      actions={[\n        <Button\n          id={id}\n          key={key}\n          variant={buttonConfirmVariant}\n          onClick={() =>\n            onClickConfirmButton && onClickConfirmButton(selectedItemData)\n          }\n          isDisabled={isDisabledConfirmButton}\n          isLoading={isLoading}\n          {...restConfirmButtonProps}\n        >\n          {confirmActionLabel}\n        </Button>,\n        <Button\n          id={cancelButtonId}\n          key={cancelButtonKey}\n          variant={cancelButtonVariant}\n          onClick={handleModalToggle}\n          {...restCancelButtonProps}\n        >\n          {cancelActionLabel}\n        </Button>,\n      ]}\n      {...restModalProps}\n    >\n      <Text\n        className={className}\n        dangerouslySetInnerHTML={{ __html: description || \"\" }}\n        {...restTextProps}\n      />\n      <ConfirmDelete />\n      {children}\n    </Modal>\n  );\n};\n","import * as React from \"react\";\nimport {\n  Title,\n  Button,\n  EmptyState as PFEmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  TitleSizes,\n  TitleProps,\n  ButtonProps,\n  EmptyStateIconProps,\n  EmptyStateProps as PFEmptyStateProps,\n  EmptyStateBodyProps,\n  ButtonVariant,\n  EmptyStateVariant,\n} from \"@patternfly/react-core\";\nimport PlusCircleIcon from \"@patternfly/react-icons/dist/js/icons/plus-circle-icon\";\nimport SpaceShuttleIcon from \"@patternfly/react-icons/dist/js/icons/space-shuttle-icon\";\nimport LockIcon from \"@patternfly/react-icons/dist/js/icons/lock-icon\";\nimport SearchIcon from \"@patternfly/react-icons/dist/js/icons/search-icon\";\nimport ExclamationCircleIcon from \"@patternfly/react-icons/dist/js/icons/exclamation-circle-icon\";\nimport NotFoundIcon from \"@app/bgimages/Not-Found.svg\";\nimport { css } from \"@patternfly/react-styles\";\nimport \"./MASEmptyState.css\";\n\nexport enum MASEmptyStateVariant {\n  GettingStarted = \"GettingStarted\",\n  NoAccess = \"NoAccess\",\n  NoResult = \"NoResult\",\n  NoItems = \"NoItems\",\n  UnexpectedError = \"UnexpectedError\",\n  PageNotFound = \"PageNotFound\",\n}\n\nexport type MASEmptyStateProps = {\n  titleProps?: Omit<TitleProps, \"children\" | \"headingLevel\"> & {\n    headingLevel?: TitleProps[\"headingLevel\"];\n  };\n  emptyStateProps?: Omit<PFEmptyStateProps, \"children\" | \"variant\"> & {\n    variant?: MASEmptyStateVariant | EmptyStateVariant;\n  };\n  emptyStateIconProps?: EmptyStateIconProps;\n  emptyStateBodyProps?: Omit<EmptyStateBodyProps, \"children\"> & {\n    body?: string | React.ReactNode;\n  };\n  buttonProps?: Omit<ButtonProps, \"children\"> & {\n    title?: string;\n    onClick?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n    \"data-testid\"?: string;\n  };\n  children?: React.ReactNode;\n};\n\nexport const MASEmptyState: React.FC<MASEmptyStateProps> = ({\n  titleProps,\n  buttonProps,\n  emptyStateIconProps,\n  emptyStateProps,\n  emptyStateBodyProps,\n  children,\n}: MASEmptyStateProps) => {\n  const {\n    variant: buttonVariant = ButtonVariant.primary,\n    onClick,\n    ...restButtonProps\n  } = buttonProps || {};\n  const { title, ...restTitleProps } = titleProps || {};\n  const { body, ...restEmptyStateBodyProps } = emptyStateBodyProps || {};\n  const {\n    variant: masEmptyStateVariant = MASEmptyStateVariant.GettingStarted,\n    className,\n    ...restEmptyStateProps\n  } = emptyStateProps || {};\n\n  const NotFoundImg = () => (\n    <img src={NotFoundIcon} alt=\"Not found page\" width=\"128px\" />\n  );\n\n  const getVariantConfig = () => {\n    let variantConfig;\n    switch (masEmptyStateVariant) {\n      case MASEmptyStateVariant.GettingStarted:\n        variantConfig = {\n          variant: EmptyStateVariant.xl,\n          icon: SpaceShuttleIcon,\n          titleSize: TitleSizes[\"4xl\"],\n          headingLevel: \"h1\" as TitleProps[\"headingLevel\"],\n        };\n        break;\n      case MASEmptyStateVariant.NoAccess:\n        variantConfig = {\n          variant: EmptyStateVariant.large,\n          icon: LockIcon,\n          titleSize: TitleSizes.xl,\n          headingLevel: \"h2\" as TitleProps[\"headingLevel\"],\n        };\n        break;\n      case MASEmptyStateVariant.NoItems:\n        variantConfig = {\n          variant: EmptyStateVariant.large,\n          icon: PlusCircleIcon,\n          titleSize: TitleSizes.xl,\n          headingLevel: \"h2\" as TitleProps[\"headingLevel\"],\n        };\n        break;\n      case MASEmptyStateVariant.NoResult:\n        variantConfig = {\n          variant: EmptyStateVariant.large,\n          icon: SearchIcon,\n          titleSize: TitleSizes.lg,\n          headingLevel: \"h2\" as TitleProps[\"headingLevel\"],\n        };\n        break;\n      case MASEmptyStateVariant.UnexpectedError:\n        variantConfig = {\n          variant: EmptyStateVariant.full,\n          icon: ExclamationCircleIcon,\n          titleSize: TitleSizes.lg,\n          headingLevel: \"h1\" as TitleProps[\"headingLevel\"],\n        };\n        break;\n      case MASEmptyStateVariant.PageNotFound:\n        variantConfig = {\n          variant: EmptyStateVariant.full,\n          icon: NotFoundImg,\n          titleSize: TitleSizes.lg,\n          headingLevel: \"h1\" as TitleProps[\"headingLevel\"],\n        };\n        break;\n      default:\n        variantConfig = {\n          variant: masEmptyStateVariant || EmptyStateVariant.full,\n          icon: emptyStateIconProps?.icon,\n          titleSize: titleProps?.size,\n          headingLevel: titleProps?.headingLevel,\n        };\n        break;\n    }\n    return variantConfig;\n  };\n\n  const { variant, icon, titleSize, headingLevel } = getVariantConfig();\n\n  return (\n    <PFEmptyState\n      variant={variant}\n      className={css(\"pf-u-pt-2xl pf-u-pt-3xl-on-md\", className)}\n      {...restEmptyStateProps}\n    >\n      <EmptyStateIcon icon={icon} {...emptyStateIconProps} />\n      {title && (\n        <Title\n          {...restTitleProps}\n          headingLevel={headingLevel || \"h2\"}\n          size={titleSize}\n        >\n          {title}\n        </Title>\n      )}\n      {body && (\n        <EmptyStateBody {...restEmptyStateBodyProps}>{body}</EmptyStateBody>\n      )}\n      {buttonProps?.title && (\n        <Button variant={buttonVariant} onClick={onClick} {...restButtonProps}>\n          {buttonProps?.title}\n        </Button>\n      )}\n      {children}\n    </PFEmptyState>\n  );\n};\n","import { Component, ErrorInfo, ReactNode } from \"react\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\nimport { withTranslation, WithTranslation } from \"react-i18next\";\nimport { PageSection, Button } from \"@patternfly/react-core\";\nimport { MASEmptyState, MASEmptyStateVariant } from \"@app/common\";\nimport \"./MASErrorBoundary.css\";\n\ntype Props = WithTranslation &\n  RouteComponentProps & {\n    children?: ReactNode;\n  };\n\ntype State = {\n  hasError?: boolean;\n};\n\nclass MASErrorBoundary extends Component<Props, State> {\n  state: State = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError(): State {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error(\"error:\", error, errorInfo);\n  }\n\n  onClickButton = () => {\n    const { history } = this.props;\n    this.setState({ hasError: false });\n    history && history.push(\"/\");\n  };\n\n  render() {\n    const { t } = this.props;\n    const { hasError } = this.state;\n\n    if (hasError) {\n      return (\n        <PageSection padding={{ default: \"noPadding\" }} isFilled>\n          <MASEmptyState\n            emptyStateProps={{\n              variant: MASEmptyStateVariant.UnexpectedError,\n            }}\n            emptyStateIconProps={{\n              className: \"icon-color\",\n            }}\n            titleProps={{\n              title: t(\"common.something_went_wrong\"),\n            }}\n            emptyStateBodyProps={{\n              body: t(\"unexpected_error\"),\n            }}\n          >\n            <Button onClick={this.onClickButton}>\n              {t(\"go_to_kafka_instances\")}\n            </Button>\n          </MASEmptyState>\n        </PageSection>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nconst MASErrorBoundaryComponent = withRouter(\n  withTranslation()(MASErrorBoundary)\n);\nexport { MASErrorBoundaryComponent as MASErrorBoundary };\n","import {\n  FC,\n  useCallback,\n  FunctionComponent,\n  createContext,\n  useContext,\n  useState,\n} from \"react\";\nimport {\n  Pagination as PFPagination,\n  PaginationProps as PFPaginationProps,\n  PaginationVariant,\n} from \"@patternfly/react-core\";\n\nexport type PaginationProps = Omit<PFPaginationProps, \"children\" | \"ref\">;\n\nexport type PaginationContextProps = {\n  page: number | undefined;\n  perPage: number | undefined;\n  setPage: (page: number | undefined) => void;\n  setPerPage: (perPage: number | undefined) => void;\n};\n\nexport const PaginationContext = createContext<\n  PaginationContextProps | undefined\n>(undefined);\nexport const usePagination = (): PaginationContextProps | undefined =>\n  useContext(PaginationContext);\n\nexport const PaginationProvider: FC = ({ children }) => {\n  const [page, setPage] = useState<number | undefined>(1);\n  const [perPage, setPerPage] = useState<number | undefined>(10);\n\n  return (\n    <PaginationContext.Provider value={{ page, perPage, setPage, setPerPage }}>\n      {children}\n    </PaginationContext.Provider>\n  );\n};\n\nconst MASPagination: FunctionComponent<PaginationProps> = ({\n  itemCount,\n  variant = PaginationVariant.top,\n  isCompact,\n  titles,\n  ...restProps\n}) => {\n  const { setPage, setPerPage, perPage, page } = usePagination() || {};\n\n  const onSetPage = useCallback(\n    (_: unknown, newPage: number) => {\n      setPage && setPage(newPage);\n    },\n    [setPage]\n  );\n\n  const onPerPageSelect = useCallback(\n    (_: unknown, newPerPage: number) => {\n      setPage && setPage(1);\n      setPerPage && setPerPage(newPerPage);\n    },\n    [setPage, setPerPage]\n  );\n\n  return (\n    <PFPagination\n      itemCount={itemCount}\n      perPage={perPage}\n      page={page}\n      onSetPage={onSetPage}\n      variant={variant}\n      onPerPageSelect={onPerPageSelect}\n      isCompact={isCompact}\n      {...restProps}\n      titles={titles}\n    />\n  );\n};\n\nexport { MASPagination };\n","import { MouseEvent, createContext, LegacyRef, useContext } from \"react\";\nimport { InstanceStatus } from \"@app/utils\";\nimport { css } from \"@patternfly/react-styles\";\nimport \"./CustomRowWrapper.css\";\nimport { IRow, RowWrapperProps } from \"@patternfly/react-table\";\n\nexport type CustomRowWrapperContextProps = {\n  activeRow?: string;\n  onRowClick?: (event: MouseEvent, rowIndex?: number, row?: IRow) => void;\n  rowDataTestId?: string;\n  loggedInUser?: string;\n} & RowWrapperProps;\n\nconst CustomRowWrapperContext = createContext<CustomRowWrapperContextProps>({\n  activeRow: \"\",\n  onRowClick: () => {\n    // No-op\n  },\n  loggedInUser: \"\",\n});\n\nexport const CustomRowWrapperProvider = CustomRowWrapperContext.Provider;\n\nexport const CustomRowWrapper = (\n  rowWrapperProps: CustomRowWrapperContextProps\n) => {\n  const { activeRow, onRowClick, rowDataTestId, loggedInUser } = useContext(\n    CustomRowWrapperContext\n  );\n  const { trRef, className, rowProps, row, ...props } = rowWrapperProps;\n  const isRowDeleted =\n    row?.originalData?.status === InstanceStatus.DEPROVISION ||\n    row?.originalData?.status === InstanceStatus.DELETED;\n  const isLoggedInUserOwner = loggedInUser === row?.originalData?.owner;\n  const isRowDisabled = isRowDeleted || !isLoggedInUserOwner;\n\n  const ref =\n    trRef === undefined ? undefined : (trRef as LegacyRef<HTMLTableRowElement>);\n\n  const handleRowClick = (event: MouseEvent) => {\n    if (!isRowDeleted) {\n      onRowClick && onRowClick(event, rowProps?.rowIndex, row);\n    }\n  };\n\n  return (\n    <tr\n      data-testid={rowDataTestId}\n      tabIndex={!isRowDisabled ? 0 : undefined}\n      ref={ref}\n      className={css(\n        className,\n        \"pf-c-table-row__item\",\n        isRowDeleted\n          ? \"pf-m-disabled\"\n          : isLoggedInUserOwner && \"pf-m-selectable\",\n        !isRowDisabled &&\n          activeRow &&\n          activeRow === row?.originalData?.name &&\n          \"pf-m-selected\"\n      )}\n      hidden={row?.isExpanded !== undefined && !row?.isExpanded}\n      {...props}\n      onClick={handleRowClick}\n    />\n  );\n};\n","import { ReactNode, ReactElement } from \"react\";\nimport {\n  HeaderProps,\n  Table as PFTable,\n  TableBody,\n  TableBodyProps,\n  TableHeader,\n  TableProps as PFTableProps,\n} from \"@patternfly/react-table\";\nimport { css } from \"@patternfly/react-styles\";\nimport {\n  CustomRowWrapper,\n  CustomRowWrapperContextProps,\n  CustomRowWrapperProvider,\n} from \"./CustomRowWrapper\";\n\nexport type MASTableProps = CustomRowWrapperContextProps & {\n  tableProps: Omit<PFTableProps, \"children\"> & {\n    hasDefaultCustomRowWrapper?: boolean;\n    ouiaId?: string;\n  };\n  tableHeaderProps?: Omit<HeaderProps, \"children\">;\n  tableBodyProps?: Omit<TableBodyProps, \"children\">;\n  children?: ReactNode;\n};\n\nconst MASTable = ({\n  tableProps,\n  tableHeaderProps,\n  tableBodyProps,\n  children,\n  activeRow,\n  onRowClick,\n  rowDataTestId,\n  loggedInUser,\n}: MASTableProps): ReactElement => {\n  const {\n    cells,\n    rows,\n    actionResolver,\n    onSort,\n    sortBy,\n    \"aria-label\": ariaLabel,\n    variant,\n    className,\n    hasDefaultCustomRowWrapper = false,\n    ouiaId,\n    ...restProps\n  } = tableProps;\n\n  /**\n   * Handle CustomRowWrapper\n   */\n  if (hasDefaultCustomRowWrapper) {\n    restProps.rowWrapper = CustomRowWrapper;\n  }\n\n  return (\n    <CustomRowWrapperProvider\n      value={{\n        activeRow,\n        onRowClick,\n        rowDataTestId,\n        loggedInUser,\n      }}\n    >\n      <PFTable\n        className={css(\n          hasDefaultCustomRowWrapper && \"mas--streams-table-view__table\",\n          className\n        )}\n        cells={cells}\n        variant={variant}\n        rows={rows}\n        aria-label={ariaLabel}\n        actionResolver={actionResolver}\n        onSort={onSort}\n        sortBy={sortBy}\n        ouiaId={ouiaId}\n        {...restProps}\n      >\n        <TableHeader {...tableHeaderProps} />\n        <TableBody {...tableBodyProps} />\n        {children}\n      </PFTable>\n    </CustomRowWrapperProvider>\n  );\n};\n\nexport { MASTable };\n","import { FunctionComponent } from \"react\";\nimport {\n  ToolbarContent,\n  Toolbar,\n  ToolbarProps,\n  ToolbarItemProps as PFToolbarItemProps,\n  ToolbarToggleGroup,\n  ToolbarItem,\n  ToolbarToggleGroupProps,\n} from \"@patternfly/react-core\";\n\nexport type ToolbarItemProps = Omit<PFToolbarItemProps, \"children\"> & {\n  item: JSX.Element | undefined;\n};\nexport type MASToolbarProps = {\n  toolbarProps: Omit<ToolbarProps, \"children\" | \"ref\">;\n  toggleGroupProps?: Omit<ToolbarToggleGroupProps, \"children\">;\n  toggleGroupItems?: ToolbarToggleGroupProps[\"children\"];\n  toolbarItems?: ToolbarItemProps[];\n};\n\nconst MASToolbar: FunctionComponent<MASToolbarProps> = ({\n  toolbarProps,\n  toggleGroupProps,\n  toolbarItems,\n  toggleGroupItems,\n}) => {\n  const {\n    id,\n    clearAllFilters,\n    collapseListedFiltersBreakpoint = \"md\",\n    inset,\n    ...restToolbarProps\n  } = toolbarProps;\n\n  return (\n    <>\n      <Toolbar\n        id={id}\n        clearAllFilters={clearAllFilters}\n        inset={inset}\n        collapseListedFiltersBreakpoint={collapseListedFiltersBreakpoint}\n        ouiaId=\"toolbar\"\n        {...restToolbarProps}\n      >\n        <ToolbarContent>\n          {toggleGroupProps && (\n            <ToolbarToggleGroup\n              {...toggleGroupProps}\n              toggleIcon={toggleGroupProps.toggleIcon}\n            >\n              {toggleGroupItems}\n            </ToolbarToggleGroup>\n          )}\n          {toolbarItems?.map((toolbarItem, index) => {\n            const {\n              key = \"mas\",\n              variant,\n              className,\n              id,\n              alignment,\n              item,\n              ...restItemProps\n            } = toolbarItem;\n            return (\n              <ToolbarItem\n                key={`${key}-${index}`}\n                variant={variant}\n                className={className}\n                id={id}\n                alignment={alignment}\n                {...restItemProps}\n              >\n                {item}\n              </ToolbarItem>\n            );\n          })}\n        </ToolbarContent>\n      </Toolbar>\n    </>\n  );\n};\n\nexport { MASToolbar };\n","import { FC } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  PageSection,\n  PageSectionVariants,\n  Text,\n  TextContent,\n} from \"@patternfly/react-core\";\nimport { ServiceAccountsTableConnected } from \"@app/modules/ServiceAccounts/components/ServiceAccountsTableConnected\";\nimport \"@app/modules/styles.css\";\n\nconst ServiceAccounts: FC = () => {\n  const { t } = useTranslation([\"kasTemporaryFixMe\"]);\n  return (\n    <>\n      <PageSection\n        variant={PageSectionVariants.light}\n        className=\"pf-m-padding-on-xl\"\n        padding={{ default: \"noPadding\" }}\n      >\n        <TextContent>\n          <Text component=\"h1\"> {t(\"serviceAccount.service_accounts\")}</Text>\n          <Text component=\"p\">\n            {t(\"serviceAccount.service_accounts_title_header_info\")}\n          </Text>\n        </TextContent>\n      </PageSection>\n      <ServiceAccountsTableConnected />\n    </>\n  );\n};\n\nexport { ServiceAccounts };\n","import { FC } from \"react\";\nimport { ServiceAccounts } from \"./ServiceAccounts\";\nimport { ModalProvider } from \"@rhoas/app-services-ui-components\";\nimport { ModalLoader } from \"@app/modals\";\n\n// Federation version of ServiceAccounts\n\nconst ServiceAccountsFederated: FC = () => {\n  return (\n    <ModalProvider>\n      <ServiceAccounts />\n      <ModalLoader />\n    </ModalProvider>\n  );\n};\n\nexport default ServiceAccountsFederated;\n"],"names":["AuthContext","undefined","useAuth","answer","useContext","Error","isModalOpen","title","modalProps","confirmButtonProps","cancelButtonProps","handleModalToggle","textProps","children","selectedItemData","textInputProps","variant","ModalVariant","titleIconVariant","ariaLabel","showClose","restModalProps","id","key","buttonConfirmVariant","ButtonVariant","onClick","onClickConfirmButton","isDisabled","isDisabledConfirmButton","label","confirmActionLabel","isLoading","restConfirmButtonProps","cancelButtonId","cancelButtonKey","cancelButtonVariant","cancelActionLabel","restCancelButtonProps","className","description","restTextProps","value","onChange","onKeyPress","showTextInput","restInputFieldProps","Modal","isOpen","onClose","appendTo","actions","Button","Text","dangerouslySetInnerHTML","__html","htmlFor","TextInput","name","type","autoFocus","MASEmptyStateVariant","titleProps","buttonProps","emptyStateIconProps","emptyStateProps","emptyStateBodyProps","buttonVariant","restButtonProps","restTitleProps","body","restEmptyStateBodyProps","masEmptyStateVariant","GettingStarted","restEmptyStateProps","NotFoundImg","src","alt","width","icon","titleSize","headingLevel","variantConfig","EmptyStateVariant","TitleSizes","NoAccess","NoItems","NoResult","UnexpectedError","PageNotFound","size","getVariantConfig","EmptyStateIcon","Title","EmptyStateBody","Component","state","hasError","onClickButton","history","this","props","setState","push","static","componentDidCatch","error","errorInfo","console","render","t","PageSection","padding","default","isFilled","withRouter","withTranslation","PaginationContext","createContext","usePagination","CustomRowWrapperContext","activeRow","onRowClick","loggedInUser","CustomRowWrapperProvider","Provider","rowWrapperProps","rowDataTestId","trRef","rowProps","row","isRowDeleted","originalData","status","isLoggedInUserOwner","owner","isRowDisabled","ref","tabIndex","hidden","isExpanded","event","rowIndex","MASTable","tableProps","tableHeaderProps","tableBodyProps","cells","rows","actionResolver","onSort","sortBy","hasDefaultCustomRowWrapper","ouiaId","restProps","rowWrapper","TableHeader","TableBody","MASToolbar","toolbarProps","toggleGroupProps","toolbarItems","toggleGroupItems","clearAllFilters","collapseListedFiltersBreakpoint","inset","restToolbarProps","Toolbar","ToolbarContent","ToolbarToggleGroup","toggleIcon","map","toolbarItem","index","alignment","item","restItemProps","ToolbarItem","ServiceAccounts","useTranslation","PageSectionVariants","TextContent","component","ModalProvider"],"sourceRoot":""}